üöÄ COMPLETE GOOGLE CLOUD SETUP GUIDE
====================================

This guide will walk you through deploying the AI News Chart application to Google Cloud Platform.

PREREQUISITES
============
‚úÖ Google Cloud account with billing enabled
‚úÖ Google Cloud CLI (gcloud) installed
‚úÖ Existing Google Cloud project (or create new one)

STEP 1: INSTALL GOOGLE CLOUD CLI (if not already installed)
===========================================================

# macOS
curl https://sdk.cloud.google.com | bash
exec -l $SHELL

# Or download from: https://cloud.google.com/sdk/docs/install

STEP 2: OPEN A NEW TERMINAL WINDOW
==================================
The installation modified your .zshrc file, so you need a fresh terminal session.

STEP 3: CHECK YOUR EXISTING PROJECTS
====================================
# List your existing projects
gcloud projects list

STEP 4: CHOOSE OR CREATE A PROJECT
==================================

OPTION A: Use an Existing Project
---------------------------------
# Set your existing project
gcloud config set project YOUR_EXISTING_PROJECT_ID

OPTION B: Create a New Project
------------------------------
# Create a new project (replace YYYYMMDD with current date)
gcloud projects create ai-news-chart-20240803 --name="AI News Chart"

# Set it as the active project
gcloud config set project ai-news-chart-20240803

PROJECT NAMING SUGGESTIONS:
- ai-news-chart-2024
- stock-chart-app
- peekay-ai-news
- ai-news-chart-demo

STEP 5: ENABLE BILLING AND APIs
===============================
# Enable App Engine API
gcloud services enable appengine.googleapis.com

# Enable billing (if not already enabled)
gcloud billing projects link YOUR_PROJECT_ID --billing-account=YOUR_BILLING_ACCOUNT_ID

STEP 6: AUTHENTICATE
====================
# Login to Google Cloud
gcloud auth login

STEP 7: DEPLOY YOUR APP
=======================
# Navigate to your project directory
cd /Users/peekay/projects/ai_news_chart

# Build and deploy
./build.sh
gcloud app deploy
gcloud app browse

QUICK CHECKLIST
==============
‚ñ° Open new terminal window (to load updated PATH)
‚ñ° Run 'gcloud projects list' to see existing projects
‚ñ° Choose project (existing or create new)
‚ñ° Enable App Engine API
‚ñ° Set up billing (if needed)
‚ñ° Authenticate with 'gcloud auth login'
‚ñ° Deploy with './build.sh' and 'gcloud app deploy'

WHAT THE BUILD SCRIPT DOES
==========================
1. Builds frontend with Vite (npm run build)
2. Copies static files to the right locations
3. Prepares backend for App Engine deployment
4. Creates deployment structure automatically

CONFIGURATION FILES
==================
app.yaml - App Engine configuration
- Configures Python runtime
- Sets up static file serving
- Defines scaling parameters (scale to zero)

backend/requirements.txt - Backend Dependencies
- Flask web framework
- yfinance for stock data
- pandas for data processing
- gunicorn for production server

build.sh - Build Script
- Builds frontend with Vite
- Copies files to deployment structure
- Prepares for App Engine deployment

COST OPTIMIZATION
================
The app.yaml is configured to SCALE TO ZERO when there's no traffic:

automatic_scaling:
  min_instances: 0  # No instances when no traffic
  min_idle_instances: 0  # No idle instances
  max_idle_instances: 0  # No idle instances

What this means:
‚úÖ $0 cost when no users - App scales down to zero instances
‚úÖ On-demand startup - Instances start when first request arrives
‚ö†Ô∏è Cold start delay - First request may take 2-5 seconds
‚úÖ Auto-scaling - Scales up automatically with traffic

EXPECTED MONTHLY COSTS
=====================
- No traffic: $0-1/month (just storage)
- Light traffic (100 requests/day): $2-5/month
- Moderate traffic (1000 requests/day): $10-20/month
- Heavy traffic (10000 requests/day): $50-100/month

POST-DEPLOYMENT VERIFICATION
===========================
- Visit your app URL (usually https://YOUR_PROJECT_ID.appspot.com)
- Test the stock chart functionality
- Check that news data loads properly
- Verify chart interactions work (clicking pink dots)
- Test API endpoints respond correctly

MONITORING AND LOGS
==================
# View logs
gcloud app logs tail

# Check deployment status
gcloud app describe

# List versions
gcloud app versions list

# Rollback if needed
gcloud app versions migrate VERSION_ID

TROUBLESHOOTING
==============

Common Issues:

1. BUILD FAILURES
   # Check Node.js version
   node --version
   
   # Clear npm cache
   npm cache clean --force

2. DEPLOYMENT ERRORS
   # Check gcloud version
   gcloud version
   
   # Update gcloud
   gcloud components update

3. API ISSUES
   - Check CORS settings
   - Verify API endpoints
   - Check network connectivity

4. BILLING ISSUES
   # Check billing status
   gcloud billing accounts list
   gcloud billing projects describe YOUR_PROJECT_ID

ALTERNATIVE DEPLOYMENT OPTIONS
=============================

OPTION 2: Cloud Run (More Cost-Effective)
-----------------------------------------
gcloud run deploy ai-news-chart \
  --source . \
  --platform managed \
  --region us-central1 \
  --allow-unauthenticated \
  --port 8080 \
  --max-instances 5 \
  --concurrency 80

OPTION 3: Cost-Optimized App Engine
-----------------------------------
gcloud app deploy app-cost-optimized.yaml

SECURITY CONSIDERATIONS
======================
- Enable HTTPS (automatic with App Engine)
- Set up proper CORS policies
- Use environment variables for secrets
- Regular security updates
- Monitor for vulnerabilities

NEXT STEPS AFTER DEPLOYMENT
===========================
1. Set up custom domain (optional)
2. Configure SSL certificates
3. Set up monitoring and alerts
4. Implement CI/CD pipeline
5. Add authentication (if needed)

SUPPORT RESOURCES
================
- Google Cloud Documentation: https://cloud.google.com/docs
- App Engine Guides: https://cloud.google.com/appengine/docs
- Cloud Run Documentation: https://cloud.google.com/run/docs
- Google Cloud Status Dashboard: https://status.cloud.google.com/

EXPECTED APP URL
===============
After successful deployment, your app will be available at:
https://YOUR_PROJECT_ID.appspot.com

The app will:
‚úÖ Scale to zero when not in use
‚úÖ Cost $0-5/month for light usage
‚úÖ Auto-scale with traffic
‚úÖ Include HTTPS by default
‚úÖ Serve both frontend and backend from same domain

ENVIRONMENT VARIABLES (Optional)
===============================
For production, consider setting these in app.yaml:

env_variables:
  FLASK_ENV: production
  API_KEY: your_api_key_here
  CORS_ORIGIN: https://yourdomain.com

COST MONITORING
===============
# Check current usage
gcloud app describe

# View billing
gcloud billing accounts list
gcloud billing projects describe YOUR_PROJECT_ID

# Set up billing alerts in Google Cloud Console

---
Need Help? Check the Google Cloud Status Dashboard for service issues. 